@model Web.Models.RecipeViewModel
@{
    ViewBag.Title = "Details";
}
@section Scripts
{
    <script src="@Url.Content("~/StaticFiles/Scripts/recipe.js")"></script>
}

<div class="row">
    <div class="col-xs-12">
        <h2>@Model.Title</h2>
    </div>
</div>
<div class="row">
    <div class="@("col-xs-5" + (Model.ImageUrl == null ? " hidden":""))">
        <img class="img-thumbnail recipe-full-img" alt=""
             src="@Url.Content("~/UploadedFiles/Recipes/" + Model.ImageUrl)" />
    </div>
    <div class="col-xs-7 recipe-details-rpane">
        <div class="row">
            <div class="col-xs-2">
                <strong>Prep time:</strong>
            </div>
            <div class="col-xs-10">
                @Html.DisplayFor(model => model.PreparationMinutes)
                &nbsp;minutes
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Total time:</strong>
            </div>
            <div class="col-xs-10">
                @Html.DisplayFor(model => model.TotalMinutes)
                &nbsp;minutes
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Serves:</strong>
            </div>
            <div class="col-xs-10">
                @Html.DisplayFor(model => model.Serves)
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Difficulty:</strong>
            </div>
            <div class="col-xs-10">
                Easy
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Cuisine:</strong>
            </div>
            <div class="col-xs-10">
                Asian
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Rated:</strong>
            </div>
            <div class="col-xs-10 stars-orange">
                @{var rating = Model.UserRatings.FirstOrDefault();

                    <span class="@("glyphicon glyphicon-star" + (rating?.Rating>=1 ? "":"-empty"))">
                    </span>
                    <span class="@("glyphicon glyphicon-star" + (rating?.Rating>=2 ? "":"-empty"))">
                    </span>
                    <span class="@("glyphicon glyphicon-star" + (rating?.Rating>=3 ? "":"-empty"))">
                    </span>
                    <span class="@("glyphicon glyphicon-star" + (rating?.Rating>=4 ? "":"-empty"))">
                    </span>
                    <span class="@("glyphicon glyphicon-star" + (rating?.Rating>=5 ? "":"-empty"))">
                    </span>

                }


                @*<span class="glyphicon glyphicon-star"></span>
        <span class="glyphicon glyphicon-star"></span>
        <span class="glyphicon glyphicon-star"></span>
        <span class="glyphicon glyphicon-star-empty"></span>
        <span class="glyphicon glyphicon-star-empty"></span>*@
            </div>
                </div>
        <div class="row">
            <div class="col-xs-2">
                <strong>Added by:</strong>
            </div>
            <div class="col-xs-10">
                John
            </div>
        </div>

        <div class="row">
            <hr />
        </div>
        <div class="@("row"+(Model.RecipeOccasions.Count > 0 ? "" : " hidden"))">
            <div class="col-xs-12">
                <strong>Occasions/Seasons:</strong>
            </div>
        </div>
        <div class="@("row text-uppercase recipe-details-cat"+(Model.RecipeOccasions.Count > 0 ? "" : " hidden"))">
            <div class="col-xs-12">
                <h5>
                    @foreach (var item in Model.RecipeOccasions)
                    {
                        <span class="label label-default">
                            @Html.DisplayFor(modelItem => item.Occasion.Name)
                        </span>
                    }
                </h5>
            </div>
        </div>
        <div class="@("row"+(Model.RecipeCategories.Count > 0 ? "" : " hidden"))">
            <div class="col-xs-12">
                <strong>Related categories:</strong>
            </div>
        </div>
        <div class="@("row text-uppercase recipe-details-cat"+(Model.RecipeCategories.Count > 0 ? "" : " hidden"))">
            <div class="col-xs-12">
                <h5>
                    @foreach (var item in Model.RecipeCategories)
                    {
                        <span class="label label-default">
                            @Html.DisplayFor(modelItem => item.Category.Name)
                        </span>

                    }
                </h5>
            </div>
        </div>


    </div>
</div>
<hr />
<div>
    <ul class="nav nav-pills" role="tablist">
        <li role="presentation" class="active"><a href="#recipe" aria-controls="recipe" role="tab" data-toggle="tab">Recipe</a></li>
        <li role="presentation" class="@(Model.Notes != null ? "" : "hidden")"><a href="#tips" aria-controls="tips" role="tab" data-toggle="tab">Tips & Hints</a></li>
        <li role="presentation"><a href="#review" aria-controls="review" role="tab" data-toggle="tab">Review</a></li>
    </ul>
</div>

<div class="tab-content tab-recipes">
    <div role="tabpanel" class="tab-pane fade active in" id="recipe" aria-labelledby="home-tab">
        <div class="well">
            <h3>@Model.Title</h3>
            <hr />
            <div class="row">
                <div class="col-sm-6">
                    <div class=" row text-uppercase">ingredients:</div>
                    <div class="row">
                        <p>
                            @foreach (var item in Model.RecipeIngredients)
                            {
                                @Html.DisplayFor(modelItem => item.Ingredient)
                            }
                        </p>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class=" row text-uppercase">method:</div>
                    <div class="row">
                        <p>
                            @foreach (var item in Model.RecipeSteps)
                            {
                                    @Html.DisplayFor(modelItem => item.Description)
                                    <br />
                            }
                            </p>
                        </div>
                </div>

            </div>

        </div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="tips" aria-labelledby="profile-tab">
        <div class="well">
            <h3>Tips & Hints</h3>
            <hr />
            <div class="row">
                <p>@Html.DisplayFor(model => model.Notes)</p>
            </div>
        </div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="review" aria-labelledby="profile-tab">
        <div class="well">
            <h3>Customer Reviews</h3>
            @foreach (var item in Model.Comments)
            {
                <p>
                    @item.Description
                </p>
                <hr />
            }
        </div>

    </div>
</div>











<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.RecipeId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
